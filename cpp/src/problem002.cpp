/**
Each new term in the Fibonacci sequence is generated by adding the previous
two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not
exceed four million, find the sum of the even-valued terms.
 */
/********************* Header Files ***********************/
#include <iostream> /* Input/output objects. */

#include "gtest/gtest.h"
#include "util.hpp"
#include "gens.hpp"

/**************** Namespace Declarations ******************/
using std::cout;
using std::endl;
using util::u_long;

/************** Global Vars & Functions *******************/
TEST(Euler002, FinalAnswer) {
    const int MAX_FIB = 4000000;
    util::gens::Fibonacci<u_long> fib;
    u_long sum = 0;

    while (fib.number() < MAX_FIB) {
        cout << "Fib ind: " << fib.index() << " Fib num: " << fib.number() << endl;
        fib.next();
        if ((fib.number() % 2) == 0) {
            sum += fib.number();
        }
    }

    cout << "Sum of even fibonacci numbers under " << MAX_FIB
        << " is " << sum << endl;

    ASSERT_EQ(4613732, sum);
}

